// mixin
// ・・・・・・・ レスポンシブwidth設定・・・・・・・
// スマホ基準(〜以上)
@mixin minmq($breakpoint: sp) {
	@media screen and (min-width: #{map-get($mq-breakpoints, $breakpoint)}) {
		@content;
	}
}
// PC基準(〜未満)
@mixin maxmq($breakpoint: sp) {
	@media  screen and (max-width: #{map-get($mq-breakpoints, $breakpoint)}) {
		@content;
	}
}

// ・・・・・・・ z-index・・・・・・・
@mixin z-index($key) {
	z-index: map-get($layer, $key);
}

// ・・・・・・・ ブラウザCSSハック・・・・・・・
// IE11
@mixin hack-IE11 {
	@at-root {
		_:-ms-lang(x)::-ms-backdrop , & {
			@content;
		}
	}
}

// Edge(EdgeHTML)
@mixin hack-Edge {
	@at-root {
		_:-ms-lang(x)::backdrop , & {
			@content;
		}
	}
}

//  Edge(Chromium)
@mixin hack-EdgeChromium {
	@at-root {
		_:lang(x)::-ms- , & {
			@content;
		}
	}
}

// Chrome
@mixin hack-Chrome {
	@at-root {
		_:lang(x)::-internal-media-controls-overlay-cast-button , & {
			@content;
		}
	}
}

// Safari
@mixin hack-Safari {
	@at-root {
		_:lang(x) + _:-webkit-full-screen-document , & {
			@content;
		}
	}
}

// Firefox
@mixin hack-Firefox {
	@at-root {
		_:lang(x)::-moz-placeholder , & {
			@content;
		}
	}
}


// font-size,line-height,font-weight,letter-spacing
@mixin f_around($pixels, $height: false, $weight: false , $spacing: false) {
	font-size: #{rem($pixels)};

	@if $weight {
		font-weight: $weight;
	}

	@if $height {
		line-height: $height / $pixels;
	}

	@if $spacing {
		letter-spacing: ($spacing / 1000) * 1em;
	}
}
// 呼び出し時
// include f_around(フォントサイズ, 行高 , 太さ, トラッキング)
// ***************************************************

// line-height
@mixin l_height($pixels , $height) {
	font-size: #{rem($pixels)};
	line-height: $height / $pixels;
}

// letter-spacing
@mixin l_spacing($spacing) {
	letter-spacing: ($spacing / 1000 ) + em;
}
// ***************************************************
